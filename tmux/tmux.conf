# vim: ft=sh
# $Id: screen-keys.conf,v 1.5 2009/10/25 21:58:05 nicm Exp $
#
# By Nicholas Marriott. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.

### Unbind existing tmux key bindings (except 0-9).

# Set the prefix to ^O.
unbind C-b
set -g prefix ^A
bind o send-prefix

# Set key to deatach with prefix+D
bind-key ^D detach-client

# increase scrollback buffer size
set -g history-limit 50000

# Patch current path
bind c new-window -c "#{pane_current_path}"

# Splits
bind-key |  split-window -h -c "#{pane_current_path}"
bind-key -  split-window -c "#{pane_current_path}"
bind-key ^V split-window -h
bind-key ^S split-window

#set-window-option -g utf8 on
#set-option -g status-utf8 on

# 0 is too far from ` ;)
set -g base-index 1

set-window-option -g set-clipboard on

# Enable Colored term 256-colors
setw -g xterm-keys on
set -g default-terminal screen-256color

# Enable UTF-8 on Status-Bar
set -g status 	    on
#set -g status-utf8  on

# Config. to refresh interval on Status-Bar
set -g status-interval 2

# To shutdown Mouse uncomment this block
# setw -g mode-mouse off # Commented because warn in tmux 2.x
# set-option -g mouse-select-pane off
# set-option -g mouse-resize-pane off
# set-option -g mouse-select-window off

setw -g mode-keys vi
setw -g monitor-activity on

set-option -g status-keys vi
set-option -g bell-action any
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T' # window number,program name,active (or not)
set-option -g visual-bell on

## `+r reloads the configuration, handy
bind r source-file ~/.tmux.conf \; display "Reloaded !"

## IF install powerline via PIP
#run-shell "tmux set-environment -g TMUX_POWERLINE_CONFIG_PATH $(pip show powerline-status | grep -i Location | cut -d ':' -f2 $1)/powerline/bindings/tmux/powerline.conf"
#run-shell "echo $TMUX_POWERLINE_CONFIG_PATH"
#set-environment -g TMUX_POWERLINE_CONFIG_PATH "$(pip show powerline-status | grep -i Location | cut -d ":" -f2 $1)/powerline/bindings/tmux/powerline.conf"
#source $TMUX_POWERLINE_CONFIG_PATH

# Log output to a text file on demand
bind P pipe-pane -o "cat >>~/logs/#W.log" \; display "Toggled logging to ~/logs/#W.log"

# List of plugins
# > https://github.com/tmux-plugins/list
set -g @plugin 'tmux-plugins/tpm'                       # Installs and loads tmux plugins.
#set -g @plugin 'jimeh/tmux-themepack'                   # A pack of various themes for Tmux for 2.6 or later.
#set -g @plugin 'odedlaz/tmux-onedark-theme'             # A dark tmux color scheme for terminal that support True Color, based on onedark.vim
set -g @plugin 'dracula/tmux'                           # A dark theme for tmux
set -g @plugin 'tmux-plugins/tmux-yank'                 # Copy to the system clipboard in tmux.
set -g @plugin 'tmux-plugins/tmux-resurrect'            # Restore tmux environment after system restart. [prefix + Ctrl-s - save][prefix + Ctrl-r - restore]
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'     # Plugin that highlights when you press tmux prefix key
set -g @plugin 'tmux-plugins/tmux-sessionist'           # Lightweight tmux utilities for manipulating tmux sessions.
set -g @plugin 'olimorris/tmux-pomodoro-plus'           # tmux plugin for pomodoro technique [perfix] + p start pomodoro [prefix] + P cancel pomodoro
#set -g @plugin 'maxrodrigo/tmux-nordvpn'               # Monitor NordVPN connection status from Tmux. https://github.com/maxrodrigo/tmux-nordvpn#installation

# Config plugin: dracula theme
set -g @dracula-show-fahrenheit false
set -g @dracula-show-powerline false
set -g @dracula-plugins "git time network-ping"
set -g @dracula-ping-server "google.com"
set -g @dracula-ping-rate 5
set -g @dracula-left-icon-padding 1

# Config plugin: tmux-pomodoro-plus
set -g status-right "#{pomodoro_status}"
set -g @pomodoro_start 'p'              # Start a Pomodoro with tmux-prefix + p
set -g @pomodoro_cancel 'P'             # Cancel a Pomodoro with tmux-prefix key + P
set -g @pomodoro_mins 25                # The duration of the pomodoro
set -g @pomodoro_break_mins 5           # The duration of the break after the pomodoro
set -g @pomodoro_repeat false           # Auto-repeat the pomodoro? False by default
set -g @pomodoro_on " üçÖ"               # The formatted output when the pomodoro is running
set -g @pomodoro_complete " ‚úÖ"         # The formatted output when the break is running
set -g @pomodoro_notifications 'off'    # Enable desktop notifications from your terminal
set -g @pomodoro_sound 'off'            # Sound for desktop notifications (Run `ls /System/Library/Sounds` for a list of sounds to use on Mac)



run '~/.tmux/plugins/tpm/tpm'